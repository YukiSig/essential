openapi: 3.0.0
info:
  title: Mini Zenn API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000

paths:
  /posts:
    get:
      summary: Get list of articles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    date:
                      type: string
                    datetime:
                      type: string
                    author:
                      type: string
                    tag:
                      type: string
                    heats:
                      type: integer 
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '500':
          $ref: '#/components/responses/InternalError' 
    post:
      summary: Post an article 
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object 
              properties:
                title:
                  type: string 
                article:
                  type: string
                tag:
                  type: string
      responses:
        '201':
          description: Article created successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          $ref: '#/components/responses/BadRequest' 
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '500':
          $ref: '#/components/responses/InternalError' 
  /posts/{id}:
    get:
      summary: Get a specific article
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An article object
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string 
                  article:
                    type: string
                  tag:
                    type: string
                  userId:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '404':
          $ref: '#/components/responses/NotFoundError' 
        '500':
          $ref: '#/components/responses/InternalError' 
    put:
      summary: Modify a specific article
      security:
        - bearerAuth: []
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object 
              properties:
                title:
                  type: string 
                article:
                  type: string
                tag:
                  type: string
      responses:
        '201':
          description: Article modified successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          $ref: '#/components/responses/BadRequest' 
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '404':
          $ref: '#/components/responses/NotFoundError' 
        '500':
          $ref: '#/components/responses/InternalError' 
  /signup:
    post:
      summary: Create a user 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object 
              properties:
                userName:
                  type: string 
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          $ref: '#/components/responses/BadRequest' 
        '500':
          $ref: '#/components/responses/InternalError' 
  /signin:
    post:
      summary: A user signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object 
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User signined successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string 
                  userId:
                    type: string
                  userName:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest' 
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '500':
          $ref: '#/components/responses/InternalError' 
components:
  responses:
    BadRequest:
      description: Bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid request parameters"
    UnauthorizedError:
        description: Unauthorized 
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid username or password"
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "No permission to access this resource"
    NotFoundError:
      description: Not Found 
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Resource not found"
    InternalError:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Internal server error"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT